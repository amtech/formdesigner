<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wskj.project.dao.TableMapper">
    <!--模版列表-->
    <select id="getTemplateList" resultType="java.util.Map">
        select * from CLASSNODE WHERE TYPE ='C'
    </select>
    <!--添加到已选模版-->
    <insert id="addTemplate" parameterType="java.util.Map">
        INSERT INTO CLASSDESCRIPTION (CLASSCODE,NAME,CHINESENAME,TABLECODE,SERIAL)
        VALUES(#{classCode},#{name},#{chineseName},#{tableCode},#{serial})
    </insert>


    <!--删除已选择模版列表-->
    <delete id="delTemplate">
         DELETE FROM CLASSDESCRIPTION WHERE CLASSCODE = #{classCode}
    </delete>
    <!--查询模版纪录最大的序号-->
    <select id="getMaxTemplateSerial" resultType="java.lang.Integer">
      SELECT  MAX(SERIAL) FROM CLASSDESCRIPTION
    </select>
    <!--已选择模版列表-->
    <select id="getOptionalTemplateList" resultType="java.util.Map">
        SELECT  * FROM CLASSDESCRIPTION ORDER BY SERIAL
    </select>
    <!--当前节点选则底层门类模版列表-->
    <select id="getSelectTemplateList" resultType="java.util.Map">
        SELECT  * FROM CLASSDESCRIPTION
        WHERE NAME IN (
            SELECT  CLASSTABLECODE FROM CLASSNODE WHERE  PARENTCODE=#{parentCode}
        )
    </select>
    <!--选中后查询实体表字段信息-->
    <select id="getSelectTableByClassCode" resultType="java.util.Map">
       SELECT LEVELCODE,CLASSCODE,RELATIONLEVEL,TABLECODE,ISNECESSARY,CHINESENAME FROM CLASSLEVEL WHERE CLASSCODE=#{classCode}
        ORDER BY RELATIONLEVEL
    </select>
    <!--获取创建实体表字段信息 getTableInfoByTableCode-->
    <select id="getTableInfoByTableCode" resultType="java.util.Map">
         SELECT COLUMNCODE,TABLECODE,NAME,CHINESENAME,SERIAL,CATEGORY,TYPE,WIDTH,POINT,ISKEY,INDEXNAME,CANNULL,CANREPEAT,VISIBLE,FORMAT,VALUESCALE,VALUEDEFAULT,ISSECURITY,INHERIT,INCREASE,INPUTTYPE,DICTIONARYCODE,REMARK,ISSIMPLEQUERY,ISCATALOGQUERY FROM
         CLASSCOLUMNDESCRIPTION
         WHERE TABLECODE=#{tableCode}
         ORDER BY SERIAL
    </select>

    <!-- 创建实体数据表-->
    <update id="addTable" parameterType="java.util.Map">
        ${SQL}
    </update>
    <!-- 数据表基本描述-->
    <insert id="addTableDescription" parameterType="java.util.Map">
        INSERT INTO TABLEDESCRIPTION(TABLECODE,NAME,AUXINAME,CHINESENAME,DATATYPE,SYSTEMTYPE,AGGREGATE)
        VALUES(#{tableCode},#{name},#{auxiName},#{chineseName},#{dataType},#{systemType},#{aggregate})
    </insert>
    <!--表字段关系-->
    <insert id="addTableRelation">
        INSERT INTO TABLERELATION(RELATIONCODE ,MASTERCOLUMNCODE ,SLAVECOLUMNCODE ,NO,TYPE,CANCHANGE )
        VALUES(#{relationCode},#{masterColumnCode},#{slaveColumnCode},#{NO},#{TYPE},#{CANCHANGE})
    </insert>
    <!-- 添加门类树节点信息 实体类表类型为E-->
    <insert id="addTableTreeInfo" parameterType="java.util.Map">
        INSERT INTO CLASSNODE (NODECODE, PARENTCODE,NAME,TYPE,CLASSCODE,CLASSTABLECODE,TABLECODE,SERIAL)
        VALUES (#{NODECODE},#{PARENTCODE},#{NAME},#{TYPE},#{CLASSCODE},#{CLASSTABLECODE},#{TABLECODE},#{SERIAL})
    </insert>
    <!--添加 用户角色数据表-->
    <!--U 表示用户，R 表示角色-->
    <!--用户、角色对应操作的表名-->
    <!--0：没有权限-->
    <!--1：自定义权限-->
    <!--9：全部权限-->
    <insert id="addSystemUseRRoleTable" parameterType="java.util.Map">
        INSERT INTO SYSTEMUSERROLETABLE(USERROLETABLECODE,USERROLECODE,TYPE,TABLENAME,RIGHTTYPE)VALUES(#{userCode},'0','U',#{tableName},'9')
    </insert>
    <!--添加默认列表长度-->
    <insert id="addOneColumn" parameterType="java.util.Map">
        INSERT INTO TABLEINTERFACELISTVIEW(LISTCODE,USERCODE,COLUMNCODE,SERIAL,TITLE,WIDTH)
        VALUES (#{listCode},'ISA',#{columnCode},#{serial},#{title},'500')
    </insert>
    <!--添加实体表包涵数据列-->
    <insert id="addTableColumnDescription" parameterType="java.util.Map">
        ${sql}
    </insert>


    <!--查询表描述-->
    <select id="getTableByTableCode" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT * FROM TABLEDESCRIPTION WHERE TABLECODE=#{tableCode}
    </select>

    <!--删除实体表，描述表的列-->
    <delete id="delTableByTableName" parameterType="java.util.Map">
        DROP TABLE ${tableName}
    </delete>

    <!--删除描述表的列-->
    <delete id="delTableDescriptionByTableCode" parameterType="java.util.Map">
        DELETE FROM TABLEDESCRIPTION WHERE TABLECODE = #{tableCode}
    </delete>

    <!--删除权限表列-->
    <delete id="delSystemUseRRoleTableByTableName" parameterType="java.util.Map">
        DELETE FROM SYSTEMUSERROLETABLE WHERE TABLENAME = #{tableName}
    </delete>

    <!--删除纪录表数据-->
    <delete id="delTableColumnDescription" parameterType="java.util.Map">
       DELETE FROM  TABLECOLUMNDESCRIPTION WHERE TABLECODE = #{tableCode}
    </delete>


    <!--获取修改的修改-->
    <select id="getEntityTableInfo" resultType="java.util.Map">
        SELECT * FROM TABLEDESCRIPTION WHERE TABLECODE=#{tableCode}
    </select>

    <!--获取修改实体表字段-->
    <select id="getEntityTableColumn" resultType="java.util.Map">
        SELECT * FROM TABLECOLUMNDESCRIPTION WHERE TABLECODE=#{tableCode}
    </select>

    <!--获取修改实体表字段-->
    <select id="getEntityTableColumnByVisible" resultType="java.util.Map">
         SELECT
         COLUMNCODE,NAME,CHINESENAME,INPUTTYPE
         FROM TABLECOLUMNDESCRIPTION WHERE TABLECODE=#{tableCode} and VISIBLE='T'
    </select>

    <!--实体表关系-->
    <select id="getEntityTableRelation" resultType="java.util.Map">
        SELECT * FROM TABLERELATION WHERE MASTERCOLUMNCODE LIKE '%${tableName}%'
    </select>

    <!--获取模版类型-->
    <select id="getSelectTemplateByDataType" resultType="java.util.Map">
      SELECT * FROM CLASSNODE WHERE  TYPE='T' and CLASSTABLECODE=#{classTableCode} and PARENTCODE=#{parentCode}
    </select>

    <!--是否是空表 getIsOkUpDataByTableName-->
    <select id="getIsOkUpDataByTableName" resultType="java.lang.Integer">
      SELECT count(*) AS COUNT FROM ${tableName}
    </select>

    <!--添加当前表字段-->
    <update id="addField" parameterType="java.util.Map">
        alter table ${tableName} add (${sql} )
    </update>

    <!--修改实体表-->
    <update id="upFieldEntityTable" parameterType="java.util.Map">
        ${sql}
    </update>

    <!--修改当前表字段-->
    <update id="upFieldTableColumnDescription" parameterType="java.util.Map">
        UPDATE TABLECOLUMNDESCRIPTION ${sql} WHERE COLUMNCODE=#{columnCode} and TABLECODE=#{tableCode}
    </update>

    <!--修改描述表信息-->
    <update id="upFieldTableDescription" parameterType="java.util.Map">
        UPDATE TABLEDESCRIPTION SET AUXINAME=#{auxiName},CHINESENAME=#{chineseName} WHERE TABLECODE=#{tableCode}
    </update>

    <!--修改当前表关系-->
    <update id="upFieldTableRelation" parameterType="java.util.Map">
        UPDATE TABLERELATION SET MASTERCOLUMNCODE=#{masterColumnCode},SLAVECOLUMNCODE=#{slaveColumnCode} WHERE RELATIONCODE=#{relationCode}
    </update>

    <!--删除表字段描述-->
    <delete id="delFieldTableColumnDescription" parameterType="java.util.Map">
        DELETE FROM TABLECOLUMNDESCRIPTION WHERE TABLECODE=#{tableCode} and COLUMNCODE=#{columnCode}
    </delete>

    <!--删除默认视图列表长度-->
    <delete id="delOneColumn" parameterType="java.util.Map">
        DELETE FROM TABLEINTERFACELISTVIEW WHERE COLUMNCODE=#{columnCode}
    </delete>

    <!--删除表字段关系-->
    <delete id="delFieldTableRelation" parameterType="java.util.Map">
        DELETE FROM TABLERELATION WHERE MASTERCOLUMNCODE=#{columnCode}
    </delete>

    <!--删除关系-->
    <delete id="delFieldRelation" parameterType="java.util.Map">
        DELETE FROM TABLERELATION WHERE RELATIONCODE=#{relationCode}
    </delete>

    <!--删除实体表表字段-->
    <delete id="delFieldTable" parameterType="java.util.Map">
        ALTER TABLE ${tableName} DROP COLUMN ${columnName}
    </delete>

    <!--添加模版节点实体表等级表-->
    <insert id="addClassLevel" parameterType="java.util.Map">
        INSERT INTO CLASSLEVEL(LEVELCODE,CLASSCODE,RELATIONLEVEL,TABLECODE,ISNECESSARY,CHINESENAME)
        VALUES(#{LEVELCODE},#{CLASSCODE},#{RELATIONLEVEL,jdbcType=NUMERIC},#{TABLECODE},#{ISNECESSARY},#{CHINESENAME})
    </insert>

    <!--模版表字段描述-->
    <insert id="addClassColumnDescription" parameterType="java.util.Map">
        INSERT INTO CLASSCOLUMNDESCRIPTION(

        <if test="ISCATALOGQUERY != null and '' != ISCATALOGQUERY">
            ISCATALOGQUERY,
        </if>

        <if test="TABLECODE != null and '' != TABLECODE">
            TABLECODE,
        </if>
        <if test="NAME != null and '' != NAME">
            NAME,
        </if>
        <if test="CHINESENAME != null and '' != CHINESENAME">
            CHINESENAME,
        </if>
        <if test="SERIAL != null and '' != SERIAL">
            SERIAL,
        </if>
        <if test="CATEGORY != null and '' != CATEGORY">
            CATEGORY,
        </if>
        <if test="TYPE != null and '' != TYPE">
            TYPE,
        </if>
        <if test="WIDTH != null and '' != WIDTH">
            WIDTH,
        </if>
        <if test="POINT != null and '' != POINT">
            POINT,
        </if>
        <if test="ISKEY != null and '' != ISKEY">
            ISKEY,
        </if>
        <if test="INDEXNAME != null and '' != INDEXNAME">
            INDEXNAME,
        </if>
        <if test="CANNULL != null and '' != CANNULL">
            CANNULL,
        </if>
        <if test="CANREPEAT != null and '' != CANREPEAT">
            CANREPEAT,
        </if>
        <if test="VISIBLE != null and '' != VISIBLE">
            VISIBLE,
        </if>
        <if test="FORMAT != null and '' != FORMAT">
            FORMAT,
        </if>
        <if test="VALUESCALE != null and '' != VALUESCALE">
            VALUESCALE,
        </if>
        <if test="VALUEDEFAULT != null and '' != VALUEDEFAULT">
            VALUEDEFAULT,
        </if>
        <if test="ISSECURITY != null and '' != ISSECURITY">
            ISSECURITY,
        </if>
        <if test="INHERIT != null and '' != INHERIT">
            INHERIT,
        </if>
        <if test="INCREASE != null and '' != INCREASE">
            INCREASE,
        </if>
        <if test="INPUTTYPE != null and '' != INPUTTYPE">
            INPUTTYPE,
        </if>
        <if test="DICTIONARYCODE != null and '' != DICTIONARYCODE">
            DICTIONARYCODE,
        </if>
        <if test="REMARK != null and '' != REMARK">
            REMARK,
        </if>
        <if test="ISSIMPLEQUERY != null and '' != ISSIMPLEQUERY">
            ISSIMPLEQUERY,
        </if>
        <if test="COLUMNCODE != null and '' != COLUMNCODE">
            COLUMNCODE
        </if>
        )
        VALUES(

        <if test="ISCATALOGQUERY != null and '' != ISCATALOGQUERY">
            #{ISCATALOGQUERY},
        </if>
        <if test="TABLECODE != null and '' != TABLECODE">
            #{TABLECODE},
        </if>
        <if test="NAME != null and '' != NAME">
            #{NAME},
        </if>
        <if test="CHINESENAME != null and '' != CHINESENAME">
            #{CHINESENAME},
        </if>
        <if test="SERIAL != null and '' != SERIAL">
            #{SERIAL},
        </if>
        <if test="CATEGORY != null and '' != CATEGORY">
            #{CATEGORY},
        </if>
        <if test="TYPE != null and '' != TYPE">
            #{TYPE},
        </if>
        <if test="WIDTH != null and '' != WIDTH">
            #{WIDTH},
        </if>
        <if test="POINT != null and '' != POINT">
            #{POINT},
        </if>
        <if test="ISKEY != null and '' != ISKEY">
            #{ISKEY},
        </if>
        <if test="INDEXNAME != null and '' != INDEXNAME">
            #{INDEXNAME},
        </if>
        <if test="CANNULL != null and '' != CANNULL">
            #{CANNULL},
        </if>
        <if test="CANREPEAT != null and '' != CANREPEAT">
            #{CANREPEAT},
        </if>
        <if test="VISIBLE != null and '' != VISIBLE">
            #{VISIBLE},
        </if>
        <if test="FORMAT != null and '' != FORMAT">
            #{FORMAT},
        </if>
        <if test="VALUESCALE != null and '' != VALUESCALE">
            #{VALUESCALE},
        </if>
        <if test="VALUEDEFAULT != null and '' != VALUEDEFAULT">
            #{VALUEDEFAULT},
        </if>
        <if test="ISSECURITY != null and '' != ISSECURITY">
            #{ISSECURITY},
        </if>
        <if test="INHERIT != null and '' != INHERIT">
            #{INHERIT},
        </if>
        <if test="INCREASE != null and '' != INCREASE">
            #{INCREASE},
        </if>
        <if test="INPUTTYPE != null and '' != INPUTTYPE">
            #{INPUTTYPE},
        </if>
        <if test="DICTIONARYCODE != null and '' != DICTIONARYCODE">
            #{DICTIONARYCODE},
        </if>
        <if test="REMARK != null and '' != REMARK">
            #{REMARK},
        </if>
        <if test="ISSIMPLEQUERY != null and '' != ISSIMPLEQUERY">
            #{ISSIMPLEQUERY},
        </if>
        <if test="COLUMNCODE != null and '' != COLUMNCODE">
            #{COLUMNCODE}
        </if>
        )
    </insert>

    <!--删除纪录-->
    <delete id="delClassColumnDes" parameterType="java.util.Map">
        DELETE FROM CLASSCOLUMNDESCRIPTION WHERE TABLECODE = #{tableCode}
    </delete>


    <!--获取创建实体表字段信息-->
    <select id="getTableColumnInfoByTableCode" resultType="java.util.Map">
         SELECT * FROM
         TABLECOLUMNDESCRIPTION
         WHERE TABLECODE=#{TABLECODE}
         ORDER BY SERIAL
    </select>


    <!--删除模版-->
    <delete id="delClassLeveByClassCode" parameterType="java.util.Map">
        DELETE FROM CLASSLEVEL WHERE CLASSCODE = #{classCode}
    </delete>

    <!--添加模版-->
    <insert id="addTableTempT" parameterType="java.util.Map">
        INSERT INTO CLASSNODE (NODECODE, PARENTCODE,NAME,TYPE,CLASSCODE,CLASSTABLECODE,TABLECODE,SERIAL)
        VALUES (#{NODECODE},#{PARENTCODE},#{NAME},#{TYPE},#{CLASSCODE},#{CLASSTABLECODE},#{TABLECODE},#{SERIAL})
    </insert>

</mapper>
